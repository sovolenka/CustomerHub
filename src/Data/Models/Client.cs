// <auto-generated> </auto-generated>
#nullable enable
namespace Data.Models
{
    using System.ComponentModel.DataAnnotations;
    using System.ComponentModel.DataAnnotations.Schema;


    /// <summary>
    /// Represents the user's client.
    /// </summary>
    public class Client
    {
        /// <summary>
        /// Initializes a new instance of the <see cref="Client"/> class.
        /// </summary>
        public Client()
        {
        }

        /// <summary>
        /// Initializes a new instance of the <see cref="Client"/> class with specified parameters.
        /// </summary>
        /// <param name="firstName">The first name of the client.</param>
        /// <param name="secondName">The second name of the client.</param>
        /// <param name="thirdName">The third name of the client.</param>
        /// <param name="phoneNumber">The phone number of the client.</param>
        /// <param name="email">The email address of the client.</param>
        /// <param name="address">The address of the client.</param>
        /// <param name="factory">The factory associated with the client.</param>
        /// <param name="dateAdded">The date when the client was added.</param>
        /// <param name="status">The status of the client (Active or Inactive).</param>
        public Client(
            string firstName,
            string secondName,
            string thirdName,
            string phoneNumber,
            string email,
            string address,
            string factory,
            DateOnly dateAdded,
            ClientStatus status)
        {
            FirstName = firstName;
            SecondName = secondName;
            ThirdName = thirdName;
            PhoneNumber = phoneNumber;
            Email = email;
            Address = address;
            Factory = factory;
            DateAdded = dateAdded;
            Status = status;
        }

        /// <summary>
        /// Gets or sets the unique identifier of the client.
        /// </summary>
        [Key] public int Id { get; set; }

        /// <summary>
        /// Gets or sets the first name of the client.
        /// </summary>
        [Required]
        [MinLength(2)]
        [MaxLength(100)]
        public string? FirstName { get; set; }

        /// <summary>
        /// Gets or sets the second name of the client.
        /// </summary>
        [Required]
        [MinLength(2)]
        [MaxLength(100)]
        public string? SecondName { get; set; }

        /// <summary>
        /// Gets or sets the third name of the client.
        /// </summary>
        public string? ThirdName { get; set; }

        /// <summary>
        /// Gets or sets the phone number of the client.
        /// </summary>
        [Required]
        [RegularExpression("^[0-9]{10,16}$")]
        public string? PhoneNumber { get; set; }

        /// <summary>
        /// Gets or sets the email address of the client.
        /// </summary>
        [Required]
        [RegularExpression(@"^[\w-\.]+@([\w-]+\.)+[\w-]{2,4}$")]
        public string? Email { get; set; }

        /// <summary>
        /// Gets or sets the address of the client.
        /// </summary>
        [Required] public string? Address { get; set; }

        /// <summary>
        /// Gets or sets the factory associated with the client.
        /// </summary>
        [Required] public string? Factory { get; set; }

        /// <summary>
        /// Gets or sets the date when the client was added.
        /// </summary>
        [Required] public DateOnly DateAdded { get; set; } = DateOnly.FromDateTime(DateTime.Now);

        /// <summary>
        /// Gets or sets the status of the client (Active or Inactive).
        /// </summary>
        [Required] public ClientStatus Status { get; set; } = ClientStatus.Active;

        /// <summary>
        /// Gets or sets the list of products associated with the client.
        /// </summary>
        public List<Product> Products { get; set; } = new();

        /// <summary>
        /// Gets or sets the list of reminders associated with the client.
        /// </summary>
        public List<Reminder> Reminders { get; set; } = new();

        /// <summary>
        /// Gets or sets the user associated with the client.
        /// </summary>
        [Required][ForeignKey("UserId")] public User? User { get; set; }
    }

    /// <summary>
    /// Enumeration representing the status of a client (Active or Inactive).
    /// </summary>
    public enum ClientStatus
    {
        /// <summary>
        /// Represents an active client.
        /// </summary>
        Active,

        /// <summary>
        /// Represents an inactive client.
        /// </summary>
        Inactive
    }
}
